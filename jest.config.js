module.exports = {
  automock: false,
  preset: 'ts-jest',
  collectCoverage: true,
  collectCoverageFrom: [
    'app/**/*.{ts,tsx,js,jsx}',
    '!configure.*.ts',
    '!app/models/*',
    '!app/index.tsx',
  ],
  coverageDirectory: 'coverage',
  coverageThreshold: {
    global: {
      branches: 95,
      functions: 95,
      lines: 95,
      statements: 95,
    },
  },
  moduleDirectories: ['node_modules', 'app', 'config'],
  moduleNameMapper: {
    '@actions(.*)$': '<rootDir>/app/actions$1',
    '@api(.*)$': '<rootDir>/app/api$1',
    '@config(.*)$': '<rootDir>/config$1',
    '@components(.*)$': '<rootDir>/app/components$1',
    '@containers(.*)$': '<rootDir>/app/containers$1',
    '@models(.*)$': '<rootDir>/app/models$1',
    '@pages(.*)$': '<rootDir>/app/pages$1',
    '@providers(.*)$': '<rootDir>/app/providers$1',
    '@reducers(.*)$': '<rootDir>/app/reducers$1',
    '@sagas(.*)$': '<rootDir>/app/sagas$1',
    '@services(.*)$': '<rootDir>/app/services$1',
    '@store(.*)$': '<rootDir>/app/store$1',
    '@styles(.*)$': '<rootDir>/app/styles$1',
    '@styles$': '<rootDir>/app/styles/index.scss',
    '@types(.*)$': '<rootDir>/app/types$1',
    '@utils(.*)$': '<rootDir>/app/utils$1',
    '\\.(jpg|jpeg|png|gif)$': 'identity-obj-proxy',
    '\\.(scss|css|sass)$': '<rootDir>/config/test/style-mock.js',
  },
  moduleFileExtensions: ['js', 'jsx', 'json', 'ts', 'tsx', 'scss'],
  restoreMocks: true,
  setupFiles: [
    '<rootDir>/config/test/polyfills.js',
    '<rootDir>/config/test/setup.js',
  ],
  snapshotSerializers: ['enzyme-to-json/serializer'],
  testEnvironment: 'jsdom',
  testMatch: ['**/*.test.+(js|ts|jsx|tsx)'],
  testPathIgnorePatterns: ['node_modules/', 'dist/'],
  testURL: 'http://localhost/',
  transform: {
    '^.+\\.jsx?': 'babel-jest',
    '.tsx?': 'ts-jest',
    '.+\\.(css|styl|less|sass|scss)$': 'jest-css-modules-transform',
  },
}
